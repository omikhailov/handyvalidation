<Window x:Class="Examples.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Examples"
        xmlns:vm="clr-namespace:Examples.ViewModel"
        xmlns:validation="clr-namespace:HandyValidation.UI;assembly=HandyValidation.UI"
        mc:Ignorable="d"
        Title="MainWindow" Width="600" Height="800">

    <Grid x:Name="Root">
        <Grid.DataContext>
            <vm:MainViewModel x:Name="ViewModel" />
        </Grid.DataContext>

        <Grid.Resources>
            <ResourceDictionary>
                <Style TargetType="TextBlock" x:Key="ValidationMessage">
                    <Setter Property="Foreground" Value="#C42B1C" />
                    <Setter Property="TextWrapping" Value="Wrap" />
                </Style>
                <Style x:Key="InvalidLastName" TargetType="TextBox">
                    <Setter Property="Background" Value="LightPink" />
                    <Setter Property="Height" Value="26" />
                    <Setter Property="Padding" Value="2,3,2,0" />
                </Style>
                <DataTemplate x:Key="CustomValidationPopupItem">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>
                        <TextBlock Text="!" Foreground="Red" FontWeight="Bold" FontFamily="Segoe UI" />
                        <TextBlock Grid.Column="1" Text="{Binding}" TextWrapping="Wrap" FontFamily="Segoe UI" VerticalAlignment="Top" Margin="8,0,8,0" />
                    </Grid>
                </DataTemplate>
            </ResourceDictionary>
        </Grid.Resources>

        <ScrollViewer VerticalScrollBarVisibility="Auto">
            <StackPanel HorizontalAlignment="Center" Width="400" Margin="8,64,8,24">
                
                <Label Content="First Name" Margin="0,8,0,0" />
                <TextBox x:Name="FirstName" Text="{Binding FirstName.Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                         validation:Border.IsHighlighted="{Binding FirstName.Validator.HasIssues, Mode=OneWay}" />
                <TextBlock Text="{Binding FirstName.Validator.FirstIssue, Mode=OneWay}"
                           Visibility="{Binding FirstName.Validator.HasIssues, Mode=OneWay, Converter={StaticResource BooleanToVisibility}}" 
                           Style="{StaticResource ValidationMessage}" />

                <Label Content="Last Name" Margin="0,8,0,0" />
                <TextBox Text="{Binding LastName.Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                         validation:Style.Value="{StaticResource InvalidLastName}" 
                         validation:Style.IsApplied="{Binding LastName.Validator.HasIssues, Mode=OneWay}" />

                <Label Content="Date of Birth" Margin="0,8,0,0" />
                <DatePicker SelectedDate="{Binding Dob.Value, Mode=TwoWay}" HorizontalAlignment="Stretch"
                            validation:Popup.IsOpen="{Binding Dob.Validator.HasIssues, Mode=OneWay}"
                            validation:Popup.ItemsSource="{Binding Dob.Validator.Issues}" />

                <Label Content="Phone Number" Margin="0,8,0,0" />
                <TextBox Text="{Binding PhoneNumber.Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                         validation:Popup.IsOpen="{Binding PhoneNumber.Validator.HasIssues, Mode=OneWay}"
                         validation:Popup.ItemsSource="{Binding PhoneNumber.Validator.Issues}" />

                <Label Content="Email" Margin="0,8,0,0" />
                <TextBox Text="{Binding Email.Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Delay=800}"
                         validation:Border.IsHighlighted="{Binding Email.Validator.HasIssues, Mode=OneWay}"
                         validation:Popup.IsOpen="{Binding Email.Validator.HasIssues, Mode=OneWay}"
                         validation:Popup.ItemsSource="{Binding Email.Validator.Issues}" />

                <Label Content="Password" Margin="0,8,0,0" />
                <Grid>
                    <TextBox Text="{Binding Password.Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" FontFamily="Consolas" Foreground="Transparent"
                             validation:Popup.IsOpen="{Binding Password.Validator.HasIssues, Mode=OneWay}"
                             validation:Popup.ItemsSource="{Binding Password.Validator.Issues}"
                             validation:Popup.ItemTemplate="{StaticResource CustomValidationPopupItem}" />
                    <TextBox Text="{Binding Password.MetaData, Mode=OneWay}" IsHitTestVisible="False" FontFamily="Consolas" Background="Transparent" />
                </Grid>

                <Label Content="Confirm Password" Margin="0,8,0,0" />
                <Grid>
                    <TextBox Text="{Binding ConfirmPassword.Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" FontFamily="Consolas" Foreground="Transparent"
                             validation:Popup.IsOpen="{Binding ConfirmPasswordValidator.HasIssues, Mode=OneWay}"
                             validation:Popup.ItemsSource="{Binding ConfirmPasswordValidator.Issues}" />
                    <TextBox Text="{Binding ConfirmPassword.MetaData, Mode=OneWay}" IsHitTestVisible="False" FontFamily="Consolas" Background="Transparent" />
                </Grid>

                <Button Content="Submit" IsEnabled="{Binding SubmitButtonWatcher.IsValid, Mode=OneWay}" Click="Button_Click" HorizontalAlignment="Right" Margin="0,32,0,0" />

            </StackPanel>
        </ScrollViewer>
    </Grid>
</Window>
