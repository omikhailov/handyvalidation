<Window
    x:Class="Examples.MainWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:Examples"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
    xmlns:vm="using:Examples.ViewModel"
    xmlns:validation="using:HandyValidation.UI"
    mc:Ignorable="d">
    
    <Grid x:Name="Root">
        <Grid.DataContext>
            <vm:MainViewModel x:Name="ViewModel" />
        </Grid.DataContext>

        <Grid.Resources>
            <ResourceDictionary>
                <Style TargetType="TextBlock" x:Key="ValidationMessage">
                    <Setter Property="Foreground" Value="#C42B1C" />
                    <Setter Property="TextWrapping" Value="Wrap" />
                </Style>
                <Style x:Key="InvalidLastName" TargetType="TextBox">
                    <Setter Property="Background" Value="LightPink" />
                </Style>
                <DataTemplate x:Key="CustomValidationPopupItem" x:DataType="x:Object">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>
                        <SymbolIcon Symbol="Important" Height="16" VerticalAlignment="Top" Margin="0,6,8,0" />
                        <TextBlock Grid.Column="1" Text="{x:Bind}" TextWrapping="Wrap" VerticalAlignment="Top" Margin="0,0,8,0" />
                    </Grid>
                </DataTemplate>
                <ThemeShadow x:Name="DefaultShadow" />
            </ResourceDictionary>
        </Grid.Resources>

        <ScrollViewer>
            <StackPanel HorizontalAlignment="Center" Width="400" Padding="8,64,8,24">

                <TextBox x:Name="FirstName" Header="First Name" Margin="0,8,0,0"
                         Text="{x:Bind ViewModel.FirstName.Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                         IsEnabled="{x:Bind ViewModel.FirstName.IsEnabled, Mode=OneWay}"
                         validation:Border.IsHighlighted="{x:Bind ViewModel.FirstName.Validator.HasIssues, Mode=OneWay}" />
                <TextBlock Text="{x:Bind ViewModel.FirstName.Validator.FirstIssue, Mode=OneWay}"
                           Visibility="{x:Bind ViewModel.FirstName.Validator.HasIssues, Mode=OneWay}" Style="{StaticResource ValidationMessage}" />

                <TextBox Header="Last Name" Margin="0,8,0,0"
                         Text="{x:Bind ViewModel.LastName.Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                         IsEnabled="{x:Bind ViewModel.LastName.IsEnabled, Mode=OneWay}"
                         validation:Style.Value="{StaticResource InvalidLastName}" 
                         validation:Style.IsApplied="{x:Bind ViewModel.LastName.Validator.HasIssues, Mode=OneWay}" />

                <DatePicker Header="Date of Birth" HorizontalAlignment="Stretch" Margin="0,8,0,0"
                            Date="{x:Bind ViewModel.Dob.Value, Mode=TwoWay}"
                            IsEnabled="{x:Bind ViewModel.Dob.IsEnabled, Mode=OneWay}"
                            validation:Popup.IsOpen="{x:Bind ViewModel.Dob.Validator.HasIssues, Mode=OneWay}"
                            validation:Popup.ItemsSource="{x:Bind ViewModel.Dob.Validator.Issues}" />

                <TextBox Header="Phone Number" Margin="0,8,0,0"
                         Text="{x:Bind ViewModel.PhoneNumber.Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                         IsEnabled="{x:Bind ViewModel.PhoneNumber.IsEnabled, Mode=OneWay}"
                         validation:Popup.IsOpen="{x:Bind ViewModel.PhoneNumber.Validator.HasIssues, Mode=OneWay}"
                         validation:Popup.ItemsSource="{x:Bind ViewModel.PhoneNumber.Validator.Issues}" />

                <TextBox Header="Email" Margin="0,8,0,0"
                         Text="{x:Bind ViewModel.Email.Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                         IsEnabled="{x:Bind ViewModel.Email.IsEnabled, Mode=OneWay}"
                         validation:Border.IsHighlighted="{x:Bind ViewModel.Email.Validator.HasIssues, Mode=OneWay}"
                         validation:Popup.IsOpen="{x:Bind ViewModel.Email.Validator.HasIssues, Mode=OneWay}"
                         validation:Popup.ItemsSource="{x:Bind ViewModel.Email.Validator.Issues}" />

                <PasswordBox Header="Password" Margin="0,8,0,0"
                             Password="{x:Bind ViewModel.Password.Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                             IsEnabled="{x:Bind ViewModel.Password.IsEnabled, Mode=OneWay}"
                             validation:Popup.IsOpen="{x:Bind ViewModel.Password.Validator.HasIssues, Mode=OneWay}"
                             validation:Popup.ItemsSource="{x:Bind ViewModel.Password.Validator.Issues}"
                             validation:Popup.ItemTemplate="{StaticResource CustomValidationPopupItem}" />

                <PasswordBox Header="Confirm Password" Margin="0,8,0,0"
                             Password="{x:Bind ViewModel.ConfirmPassword.Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                             IsEnabled="{x:Bind ViewModel.ConfirmPassword.IsEnabled, Mode=OneWay}"
                             validation:Popup.IsOpen="{x:Bind ViewModel.ConfirmPasswordValidator.HasIssues, Mode=OneWay}"
                             validation:Popup.ItemsSource="{x:Bind ViewModel.ConfirmPasswordValidator.Issues}" />

                <Button Content="Submit" IsEnabled="{x:Bind ViewModel.SubmitButtonWatcher.IsEnabled, Mode=OneWay}" Click="{x:Bind ViewModel.Submit}" HorizontalAlignment="Right" Margin="0,32,0,0" />

            </StackPanel>
        </ScrollViewer>

        <ContentDialog Title="Custom Dialog" CloseButtonText="OK"
                       validation:ContentDialog.IsOpen="{x:Bind ViewModel.FormValidator.HasIssues, Mode=OneWay}">
            <Grid MinWidth="300">
                <ItemsControl ItemsSource="{x:Bind ViewModel.FormValidator.Issues}" Margin="32,16,32,16">
                    <ItemsControl.ItemTemplate>
                        <DataTemplate x:DataType="x:Object">
                            <TextBlock Text="{x:Bind}" TextWrapping="Wrap" />
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>
            </Grid>
        </ContentDialog>
    </Grid>
</Window>
